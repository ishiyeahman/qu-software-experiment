                         4 .list
                         5 /* *_count の値を変更して繰り返し変え数を決定する */
                         6 .section .data
                         7 .equ IN_COUNT, 128
                         8 .equ OUT_COUNT, 129
                         9 .equ queue_number, 0
                        10 .equ OFFSET_1, 0x100
                        11 .equ END_0, 0xff
                        12 .equ END_1, 0x1ff
00063c 0000 0000        13 top: .ds.b 0x200
       0000 0000        13 
       0000 0000        13 
       0000 0000        13 
       0000 0000        13 
00083c 0000 0000        14 bottom: .ds.w 2
000840 0000 0000        15 in: .ds.l 1
000844 0000 0000        16 in_0: .ds.l 1
000848 0000 0000        17 in_1: .ds.l 1
                        18 
00084c 0000 0000        19 out: .ds.l 1
000850 0000 0000        20 out_0: .ds.l 1
000854 0000 0000        21 out_1: .ds.l 1
                        22 
000858 0000 0000        23 s: .ds.l 1
00085c 0000 0000        24 s0: .ds.l 1
000860 0000 0000        25 s1: .ds.l 1
                        26 
                        27 **PUT_FLG: .ds.b 1
                        28 **PUT_FLG_0: .ds.b 1
                        29 **PUT_FLG_1: .ds.b 1
                        30 
                        31 **GET_FLG: .ds.b 1
                        32 **GET_FLG_0: .ds.b 1
                        33 **GET_FLG_1: .ds.b 1
                        34 
000864 0000 0000        35 START_LABEL: .ds.l 1
                        36 
                        37 .section .text
                        38 
                        39 ** 0x1000からデータを適当に入力する
                        40 ** 0x1300にとりだされたデータが格納される
                        41 ** 0x1600に戻り値1 or 0が格納される
                        42 
                        43 start:
000400 4EBA 0050        44 	jsr Init_Q
                        45 
000404 227C 0000        46 	move.l #0x1000, %A1
       1000             46 
00040a 247C 0000        47 	move.l #0x1300, %A2
       1300             47 
000410 267C 0000        48 	move.l #0x1600, %A3
       1600             48 
000416 6000 0006        49 	bra in_set
                        50 
                        51 finish:
00041a 4E72 0A8C        52 	stop #2700
                        53 
                        54 
                        55 /* =============================== */
                        56 in_set:
00041e 363C 0080        57 	move.w #IN_COUNT, %d3
                        58 
                        59 in_loop:
000422 303C 0000        60 	move.w #queue_number, %d0
                        61 
                        62 	/* 書き込むべきデータを与える */
000426 1219             63 	move.b (%A1)+, %D1
                        64 
000428 4EBA 0078        65 	jsr INQ
                        66 	/* 戻り値の格納 */
00042c 16C0             67 	move.b %D0, (%A3)+
                        68 
00042e 5383             69 	subq.l #1, %d3
000430 6600 FFF0        70 	bne in_loop
000434 6000 0002        71 	bra out_set
                        72 
                        73 /* ================================ */
                        74 
                        75 
                        76 out_set:
000438 363C 0081        77 	move.w #OUT_COUNT, %d3
                        78 
                        79 out_loop:
00043c 303C 0000        80 	move.w #queue_number, %d0
000440 4EBA 019A        81 	jsr OUTQ
                        82 
                        83 /* データと戻り値をメモリに格納しておく*/
000444 14C1             84 	move.b %D1, (%A2)+
000446 16C0             85 	move.b %D0, (%A3)+
                        86 
000448 5383             87 	subq.l #1, %d3
00044a 6600 FFF0        88 	bne out_loop
00044e 6000 FFCA        89 	bra finish
                        90 
                        91 
                        92 /* キュー領域の前後での書き込みが発生していないことを確認する*/
                        93 
                        94 
                        95 /* 以下に　INQ と OUTQ を貼り付ける*/
                        96 Init_Q:
000452 48E7 FE7E        97 	movem.l %d0-%d6/%a1-%a6, -(%sp)
                        98 
000456 45F9 0000        99 	lea.l top, %a2
       0000             99 
00045c 23CA 0000       100 	move.l %a2, in_0
       0000            100 
000462 23CA 0000       101 	move.l %a2, out_0
       0000            101 
000468 47EA 0100       102 	lea.l OFFSET_1(%a2), %a3
00046c 23CB 0000       103 	move.l %a3, in_1
       0000            103 
000472 23CB 0000       104 	move.l %a3, out_1
       0000            104 
000478 49F9 0000       105 	lea.l s, %a4
       0000            105 
00047e 4BF9 0000       106 	lea.l s0, %a5
       0000            106 
000484 4DF9 0000       107 	lea.l s1, %a6
       0000            107 
00048a 28BC 0000       108 	move.l #0,(%a4)
       0000            108 
000490 2ABC 0000       109 	move.l #0,(%a5)
       0000            109 
000496 2CBC 0000       110 	move.l #0,(%a6)
       0000            110 
                       111 **move.b #0xff, PUT_FLG_0
                       112 **move.b #0xff, PUT_FLG_1
                       113 **move.b #0x00, GET_FLG_0
                       114 **move.b #0x00, GET_FLG_1
                       115 
00049c 4CDF 7E7F       116 	movem.l (%sp)+,%d0-%d6/%a1-%a6
                       117 
0004a0 4E75            118 rts
                       119 
                       120 *****************************************************************
                       121 INQ:
0004a2 4EBA 0008       122 	jsr SELECT_QUEUE
0004a6 4EBA 008A       123 	jsr PUT_BUF
                       124 
0004aa 4E75            125 rts
                       126 **************************************************************
                       127 SELECT_QUEUE:
0004ac 0C00 0000       128 	cmp.b #0, %d0
0004b0 6700 000C       129 	beq SET_0
0004b4 0C00 0001       130 	cmp.b #1, %d0
0004b8 6700 003C       131 	beq SET_1
                       132 	
                       133 **move.b #0x00, PUT_FLG
                       134 **move.b #0x00, GET_FLG
0004bc 4E75            135 	rts
                       136 
                       137 SET_0:
                       138 
                       139 
0004be 48E7 FE7E       140 	movem.l %d0-%d6/%a1-%a6, -(%sp)
                       141 
0004c2 23F9 0000       142 	move.l in_0, in
       0000 0000       142 
       0000            142 
0004cc 23F9 0000       143 	move.l out_0, out
       0000 0000       143 
       0000            143 
                       144 **move.b PUT_FLG_0, PUT_FLG
                       145 **move.b GET_FLG_0, GET_FLG
0004d6 23CA 0000       146 	move.l %a2, START_LABEL
       0000            146 
0004dc 47EA 00FF       147 	lea.l END_0(%a2), %a3
0004e0 23CB 0000       148 	move.l %a3, bottom
       0000            148 
0004e6 23F9 0000       149 	move.l s0,s
       0000 0000       149 
       0000            149 
                       150 	
0004f0 4CDF 7E7F       151 	movem.l (%sp)+,%d0-%d6/%a1-%a6
                       152 
                       153 
0004f4 4E75            154 	rts	
                       155 
                       156 SET_1:
                       157 
                       158 
                       159 
0004f6 48E7 FE7E       160 	movem.l %d0-%d6/%a1-%a6, -(%sp)
                       161 
0004fa 23F9 0000       162 	move.l in_1, in
       0000 0000       162 
       0000            162 
000504 23F9 0000       163 	move.l out_1, out
       0000 0000       163 
       0000            163 
                       164 	**move.b PUT_FLG_1, PUT_FLG
                       165 	**move.b GET_FLG_1, GET_FLG
00050e 47EA 0100       166 	lea.l OFFSET_1(%a2), %a3
000512 23CB 0000       167 	move.l %a3, START_LABEL
       0000            167 
000518 47EA 01FF       168 	lea.l END_1(%a2), %a3
00051c 23CB 0000       169 	move.l %a3, bottom
       0000            169 
000522 23F9 0000       170 	move.l s0,s
       0000 0000       170 
       0000            170 
                       171 
00052c 4CDF 7E7F       172 	movem.l (%sp)+,%d0-%d6/%a1-%a6
                       173 
000530 4E75            174 	rts
                       175 
                       176 *************************************************************************
                       177 
                       178 
                       179 PUT_BUF:
000532 48E7 007E       180 movem.l %a1-%a6, -(%sp)
                       181 
000536 1439 0000       182 move.b s,%d2
       0000            182 
00053c 0C42 0100       183 cmp.w #0x100,%d2
000540 6700 003A       184 beq PUT_FAIL 
000544 143C 0001       185 move.b #1,%d2 /*成功*/
000548 2279 0000       186 movea.l in, %a1
       0000            186 
00054e 12C1            187 move.b %d1, (%a1)+        
000550 2679 0000       188 move.l bottom, %a3
       0000            188 
000556 B3CB            189 cmpa.l %a3, %a1
000558 6300 000A       190 bls PUT_BUF_STEP1
00055c 2479 0000       191 move.l START_LABEL, %a2
       0000            191 
000562 224A            192 movea.l %a2, %a1
                       193 
                       194 PUT_BUF_STEP1:
000564 23C9 0000       195 move.l %a1, in
       0000            195 
00056a B3F9 0000       196 cmpa.l out, %a1
       0000            196 
000570 6600 0002       197 bne PUT_BUF_STEP2
                       198 **move.b #0x00, PUT_FLG
                       199 
                       200 PUT_BUF_STEP2:
                       201 **move.b #0xff, GET_FLG
000574 4EBA 0010       202 jsr UPDATE
000578 6000 0006       203 bra PUT_BUF_Finish
                       204 
                       205 PUT_FAIL:
00057c 143C 0000       206 move.b #0,%d2 /*失敗*/
                       207 
                       208 PUT_BUF_Finish:
                       209 
                       210 
000580 4CDF 7E00       211 movem.l (%sp)+, %a1-%a6
                       212 
                       213 
000584 4E75            214 rts
                       215 
                       216 ****************************************************************
                       217 
                       218 UPDATE:
000586 0C40 0000       219 cmp #0, %d0
00058a 6700 000C       220 beq QUEUE_0
00058e 0C40 0001       221 cmp #1, %d0
000592 6700 0026       222 beq QUEUE_1
000596 4E75            223 rts
                       224 
                       225 QUEUE_0:
000598 23F9 0000       226 move.l in, in_0
       0000 0000       226 
       0000            226 
                       227 **move.b PUT_FLG, PUT_FLG_0
0005a2 23F9 0000       228 move.l out, out_0
       0000 0000       228 
       0000            228 
                       229 **move.b GET_FLG, GET_FLG_0
0005ac 23F9 0000       230 move.l s,s0
       0000 0000       230 
       0000            230 
0005b6 1002            231 move.b %d2,%d0 /*成功or失敗の返り値*/
                       232 
0005b8 4E75            233 rts
                       234 QUEUE_1:
0005ba 23F9 0000       235 move.l in, in_1
       0000 0000       235 
       0000            235 
                       236 **move.b PUT_FLG, PUT_FLG_1
0005c4 23F9 0000       237 move.l out, out_1
       0000 0000       237 
       0000            237 
                       238 **move.b GET_FLG, GET_FLG_1
0005ce 23F9 0000       239 move.l s,s1
       0000 0000       239 
       0000            239 
0005d8 1002            240 move.b %d2,%d0 /*成功or失敗の返り値*/
0005da 4E75            241 rts
                       242 
                       243 ********************************************
                       244 OUTQ:
0005dc 4EBA FECE       245 jsr SELECT_QUEUE
0005e0 4EBA 0004       246 jsr GET_BUF
0005e4 4E75            247 rts
                       248 *********************************************
                       249 GET_BUF:
0005e6 48E7 007E       250 	movem.l %a1-%a6, -(%sp)
                       251 
0005ea 1439 0000       252 	move.b s,%d2
       0000            252 
0005f0 0C02 0000       253 	cmp.b #0x00,%d2
0005f4 6700 003A       254 	beq GET_FAIL
                       255 
0005f8 143C 0001       256 	move.b #1,%d2 /*成功*/
0005fc 2279 0000       257 	movea.l out, %a1
       0000            257 
000602 1219            258 	move.b (%a1)+, %d1     
000604 2679 0000       259 move.l bottom, %a3
       0000            259 
00060a B3CB            260 cmpa.l %a3, %a1
00060c 6300 000A       261 bls GET_BUF_STEP1
000610 2479 0000       262 move.l START_LABEL, %a2
       0000            262 
000616 224A            263 movea.l %a2, %a1
                       264 
                       265 GET_BUF_STEP1:
000618 23C9 0000       266 	move.l %a1, out
       0000            266 
00061e B3F9 0000       267 	cmpa.l in, %a1
       0000            267 
000624 6600 0002       268 	bne GET_BUF_STEP2
                       269 	**move.b #0x00, GET_FLG
                       270 
                       271 GET_BUF_STEP2:
                       272 	**move.b #0xff, PUT_FLG
000628 4EBA FF5C       273 	jsr UPDATE
00062c 6000 0006       274 	bra GET_BUF_Finish
                       275 
                       276 GET_FAIL:
000630 143C 0000       277 	move.b #0,%d2 /*失敗*/
                       278 	GET_BUF_Finish:
000634 4CDF 7E00       279 	movem.l (%sp)+, %a1-%a6
000638 4E75            280 rts
                       281 
                       282 
                       283 
